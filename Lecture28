# computing fib[n]

def fib(n):
    A = [0] * (n+1)
    A[0] = 0
    A[1] = 1
    for i in range(2, n+1):
        A[i] = A[i-1] + A[i-2]


    return A[n]



def A(n, memo = {0:0, 1:1}):

    if i in memo:
        return memo[i]


    memo[i] = A(i-1, memo) = A(i-2, memo)

    # if i ==0:
    #     return 0

    # if i==1:
    #     return 1

    return memo[i]




## A row of pixels with brightness going from 0 to 255


## 10 20 12 50 100 80 80 80 80 80 80 

#At what locations does the brightness change a lot

# compute derivative to determine when it changes the most

# f(x+1) - f(x-1) /2 is high?

# f(x+1) - f(x-1) is an estimate for the derivative 

## 10 20 12 50 100 80 80 80 80 80 80 
## 10 20 12 50 100 100 90 90 90 80 80 
## 10 20 12 50 100 100 90 90 90 80 80 


# (f(y+1) - f(y-1))/2 is high?

# at (x,y) is there a lot of change?

#gradient(x,y); [

# (f(x+1)-f(x-1)) /2 
# (f(y+1)-f(y-1)) /2 

# ]

# is the magnitude of the gradient high?
